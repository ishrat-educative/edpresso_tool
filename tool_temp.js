{"shotId":"6049442160967680","title":"How to check if a string is null or empty in C#","tags":"c#,empty,communitycreator","content":[{"type":"MarkdownEditor","content":{"version":"2.0","text":"The **`String`** class in the `System` namespace provides the `IsNullOrEmpty()` method to check if a string is null or an empty string(\"\"). This is a handy method to validate user input. \n\n`IsNullOrEmpty()` takes a string as an input and returns a Boolean value that depends on whether or not the string is null or empty.\n\n\n#### Syntax\n```\npublic static bool IsNullOrEmpty (string? value);\n```\n\nThe `IsNullOrEmpty()` method returns true if the input is `null`. \n\nFor example:\n```\nstring str = null;\nConsole.WriteLine(String.IsNullOrEmpty(str));  //True\n```\n\n\n`IsNullOrEmpty()` returns true if the input is an empty string. In C#, this is a *zero length string (\"\")*.\n\nFor example: \n```\nstring str1 = \"\";\nstring str2 = String.Empty;\nConsole.WriteLine(String.IsNullOrEmpty(str1)); // True\nConsole.WriteLine(String.IsNullOrEmpty(str2)); // True\n```\n\nThe `IsNullOrEmpty()` method can be used to avoid the null reference exception by checking if a string is null before using it, as seen below:\n\n```\nif(String.IsNullOrEmpty(userName)) {\n  //perform operation on string\n}\n```\n","mdHtml":"<p>The <strong><code>String</code></strong> class in the <code>System</code> namespace provides the <code>IsNullOrEmpty()</code> method to check if a string is null or an empty string(&quot;&quot;). This is a handy method to validate user input.</p>\n<p><code>IsNullOrEmpty()</code> takes a string as an input and returns a Boolean value that depends on whether or not the string is null or empty.</p>\n<h4>Syntax</h4>\n<pre><code>public static bool IsNullOrEmpty (string? value);\n</code></pre>\n<p>The <code>IsNullOrEmpty()</code> method returns true if the input is <code>null</code>.</p>\n<p>For example:</p>\n<pre><code>string str = null;\nConsole.WriteLine(String.IsNullOrEmpty(str));  //True\n</code></pre>\n<p><code>IsNullOrEmpty()</code> returns true if the input is an empty string. In C#, this is a <em>zero length string (&quot;&quot;)</em>.</p>\n<p>For example:</p>\n<pre><code>string str1 = &quot;&quot;;\nstring str2 = String.Empty;\nConsole.WriteLine(String.IsNullOrEmpty(str1)); // True\nConsole.WriteLine(String.IsNullOrEmpty(str2)); // True\n</code></pre>\n<p>The <code>IsNullOrEmpty()</code> method can be used to avoid the null reference exception by checking if a string is null before using it, as seen below:</p>\n<pre><code>if(String.IsNullOrEmpty(userName)) {\n  //perform operation on string\n}\n</code></pre>\n","cursorPosition":504,"comp_id":"2upqKgLUAKx1NiDmQus2r"},"iteration":3,"hash":1,"saveVersion":7},{"type":"MarkdownEditor","mode":"edit","content":{"version":"2.0","text":"### Code\nIn the example below, we call the `IsNullOrEmpty()` method with different string inputs and print the result:","mdHtml":"<h3>Code</h3>\n<p>In the example below, we call the <code>IsNullOrEmpty()</code> method with different string inputs and print the result:</p>\n","cursorPosition":{"line":0,"ch":0},"comp_id":"D0WF7MuOC_AbeaIafjOrB"},"iteration":3,"hash":3,"saveVersion":6},{"type":"Code","mode":"edit","content":{"version":"7.0","caption":"","language":"c#","title":"","theme":"default","additionalContent":[],"selectedIndex":0,"runnable":true,"judge":false,"staticEntryFileName":true,"judgeContent":null,"judgeHints":null,"allowDownload":false,"treatOutputAsHTML":false,"enableHiddenCode":false,"enableStdin":false,"evaluateWithoutExecution":false,"showSolution":false,"timeLimit":30,"hiddenCodeContent":{"prependCode":"\n\n","appendCode":"\n\n","codeSelection":"prependCode"},"dockerJob":{},"selectedApiKeys":{},"selectedEnvVars":{},"specialInput":"no-input","solutionContent":"\n\n\n","judgeContentPrepend":"\n\n\n","evaluateLanguage":null,"isCodeDrawing":false,"content":"using System;\n\nclass HelloWorld\n{\n    static void Main()\n    {\n        \n        string nullStr = null;\n        // print True\n        Console.WriteLine(String.IsNullOrEmpty(nullStr));\n\n        string emptyStr1 = \"\";\n        // print True\n        Console.WriteLine(String.IsNullOrEmpty(emptyStr1));\n\n        string emptyStr2 = String.Empty;\n        // print True\n        Console.WriteLine(String.IsNullOrEmpty(emptyStr2));\n\n        string str = \"some text\";\n        // print False\n        Console.WriteLine(String.IsNullOrEmpty(str));\n\n    }\n}","entryFileName":"main.cs","staticEntryName":false,"onlyCodeChanged":false,"readOnlyApiKeys":false,"transformOutput":false,"outputTransformCode":"function outputTransform(stdout, stderr) {\n  // Transform output or perform API key extraction.\n  const apiKeys = {};\n  return { apiKeys, stdout, stderr };\n}","imageId":"","outputImageHeight":150,"comp_id":"P1lqM1kCX2VIeNZR2Wxe-"},"iteration":1,"hash":2,"saveVersion":2}],"url":"how-to-check-if-a-string-is-null-or-empty-in-c-sharp","docker":{"container":{"file":{},"imageName":"","buildStatusUrl":"","buildLogUrl":""},"jobs":[],"envs":[],"version":3,"loaded":true},"canonical_url":""}